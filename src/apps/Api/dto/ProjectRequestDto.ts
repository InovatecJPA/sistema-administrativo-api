import User from "../../Auth/model/User";
import ProjectRequest from "../model/ProjectRequest";

/**
 * Data Transfer Object (DTO) for ProjectRequest entities.
 * This class is used to transfer data related to project requests between layers of the application.
 */
export default class ProjectRequestDto {
  /**
   * The user who requested the project.
   * This is a required field and represents the user who initiated the project request.
   *
   * @type {User}
   */
  user: User;

  /**
   * Description of the project request.
   * This is a required field that provides information about the project request.
   *
   * @type {string}
   */
  description: string;

  /**
   * The path or URL to the attached file related to the project request.
   * This field is optional and can be undefined if no file is attached.
   *
   * @type {string | undefined}
   */
  attachedFile?: string;

  public getUser(): User | null {
    return this.user;
  }

  public setUser(user: USer): void {
    this.user = user;
  }

  /**
   * Validates the current `ProjectRequestDto` instance.
   * Ensures that all required fields (`user` and `description`) are non-null and valid.
   *
   * @returns {boolean} Returns `true` if the DTO is valid, otherwise `false`.
   */
  public isValid(): boolean {
    return (
      !!this.user && !!this.description && this.description.trim().length > 0
    );
  }

  /**
   * Converts the current `ProjectRequestDto` instance into a `ProjectRequest` entity.
   * This method creates an instance of the `ProjectRequest` that can be persisted in the database.
   *
   * @returns {ProjectRequest} A new `ProjectRequest` entity created from the DTO.
   */
  public toProjectRequest(): ProjectRequest {
    const now = new Date();

    return new ProjectRequest(
      "", // Assuming `id` will be generated by the database
      this.description,
      this.attachedFile ?? "", // Fallback to empty string if `attachedFile` is undefined
      now, // Set the `createdAt` timestamp to the current time
      now // Set the `updatedAt` timestamp to the current time
    );
  }

  /**
   * Constructor with all arguments for ProjectRequestDto.
   *
   * @param {string} description - The description of the project request.
   * @param {string | undefined} attachedFile - The optional attached file for the project request.
   */
  constructor(description: string, attachedFile?: string) {
    this.description = description;
    this.attachedFile = attachedFile;
  }
}
